CV Screen
import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet, Alert } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { useNavigation } from '@react-navigation/native';

const CVScreen = () => {
  const navigation = useNavigation();
  const [firstName, setFirstName] = useState('');
  const [lastName, setLastName] = useState('');
  const [phoneNumber, setPhoneNumber] = useState('');
  const [education, setEducation] = useState('');
  const [experience, setExperience] = useState('');

  const handleSaveCV = async () => {
    try {
      // Validate if required fields are filled
     

      if (!firstName || !lastName) {
        Alert.alert('Error', 'First Name and Last Name are required.');
        return;
      }
      const handleLogin = async () => {
  try {
    // ... (existing code)

    if (userData && userData.username === username && userData.password === password) {
      console.log('Login successful. Navigating to CV screen.');
      navigation.navigate('CV');
    } else {
      console.log('Invalid username or password');
      setErrorMessage('Invalid username or password');
    }
  } catch (error) {
    console.error('Error during login:', error);
  }
};


      // Save CV details to local storage
      const cvDetails = {
        firstName,
        lastName,
        phoneNumber,
        education,
        experience,
      };

      // Store in AsyncStorage
      await AsyncStorage.setItem('cvDetails', JSON.stringify(cvDetails));

      // Inform the user that the CV has been saved
      Alert.alert('Success', 'CV details saved successfully.');

      // You can also navigate to another screen or perform additional actions here
    } catch (error) {
      console.error('Error saving CV details:', error);
      Alert.alert('Error', 'Failed to save CV details. Please try again.');
    }
  };

  const handlePreview = () => {
    
    // Navigate to the 'ViewCV' screen
    navigation.navigate('ViewCV');
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Create CV</Text>
      <TextInput
        style={styles.input}
        placeholder="First Name"
        value={firstName}
        onChangeText={setFirstName}
      />
      <TextInput
        style={styles.input}
        placeholder="Last Name"
        value={lastName}
        onChangeText={setLastName}
      />
      <TextInput
        style={styles.input}
        placeholder="Phone Number"
        value={phoneNumber}
        onChangeText={setPhoneNumber}
      />
      <TextInput
        style={styles.input}
        placeholder="Education"
        value={education}
        onChangeText={setEducation}
      />
      <TextInput
        style={styles.input}
        placeholder="Experience"
        value={experience}
        onChangeText={setExperience}
      />
      <Button title="Save CV" onPress={handleSaveCV} />
      <Button title="Preview" onPress={handlePreview} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F0F8FF', 
  },
  title: {
    fontSize: 28,
    marginBottom: 20,
    fontWeight: 'bold',
    color: '#4169E1', 
  },
  input: {
    height: 40,
    width: '80%',
    borderColor: '#A9A9A9',
    borderWidth: 2,
    marginBottom: 20,
    paddingLeft: 12,
    backgroundColor: '#F5F5F5', 
    borderRadius: 8,
  },
});


export default CVScreen;


Home Screen

import React from 'react';
import { View, Text, Button, StyleSheet } from 'react-native';

const HomeScreen = ({ navigation }) => {
  return (
    <View style={styles.container}>
      <Text style={styles.title}>Welcome to Your App</Text>
      <Button
        title="Login"
        onPress={() => navigation.navigate('Login')}
        style={styles.button}
      />
      <Button
        title="Sign Up"
        onPress={() => navigation.navigate('SignUp')}
        style={styles.button}
      />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#F0F8FF',
  },
  title: {
    fontSize: 24,
    marginBottom: 16,
    fontWeight: 'bold',
    color: '#4169E1',
  },
  button: {
    marginTop: 20,
  },
});

export default HomeScreen;


Login Screen

import React, { useState, useEffect } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';
import { useNavigation } from '@react-navigation/native';
import * as SecureStore from 'expo-secure-store';
import AsyncStorage from '@react-native-async-storage/async-storage';

const LoginScreen = () => {
  const navigation = useNavigation();
  const [username, setUsername] = useState('');
  const [password, setPassword] = useState('');
  const [errorMessage, setErrorMessage] = useState('');

  useEffect(() => {
    
    setErrorMessage('');
  }, []);

  const handleLogin = async () => {
    try {
      
      const storedUserData = await SecureStore.getItemAsync('userData');
      const userData = JSON.parse(storedUserData);

      if (userData && userData.username === username && userData.password === password) {
       
        await AsyncStorage.setItem('userData', JSON.stringify(userData));

        
        console.log('Login successful! Navigating to CV screen...');

       
        navigation.navigate('CV');
      } else {
        
        setErrorMessage('Invalid username or password');
      }
    } catch (error) {
      console.error('Error during login:', error);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Login</Text>
      {errorMessage !== '' && (
        <Text style={styles.errorMessage}>{errorMessage}</Text>
      )}
      <TextInput
        style={styles.input}
        placeholder="Username"
        value={username}
        onChangeText={setUsername}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
      />
      <Button title="Login" onPress={handleLogin} />
    </View>
  );
};
const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: '#ecf0f1',
  },
  title: {
    fontSize: 24,
    marginBottom: 16,
    fontWeight: 'bold',
    color: '#3498db',
  },
  input: {
    height: 40,
    width: '80%',
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 16,
    paddingLeft: 8,
    backgroundColor: '#fff',
  },
  errorMessage: {
    color: 'red',
    marginBottom: 16,
  },
});

export default LoginScreen;


Signup Screen

import React, { useState } from 'react';
import { View, Text, TextInput, Button, StyleSheet } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';
import { useNavigation } from '@react-navigation/native';

const SignUpScreen = () => {
  const [username, setUsername] = useState('');
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');

  const navigation = useNavigation();

  const handleSignUp = async () => {
    try {
      const userData = { username, email, password };
      await AsyncStorage.setItem('userData', JSON.stringify(userData));

      // After successful signup, navigate to the Login screen
      navigation.navigate('Login');
    } catch (error) {
      console.error('Error storing user data:', error);
    }
  };

  return (
    <View style={styles.container}>
      <Text style={styles.title}>Sign Up</Text>
      <TextInput
        style={styles.input}
        placeholder="Username"
        value={username}
        onChangeText={setUsername}
      />
      <TextInput
        style={styles.input}
        placeholder="Email"
        value={email}
        onChangeText={setEmail}
      />
      <TextInput
        style={styles.input}
        placeholder="Password"
        secureTextEntry
        value={password}
        onChangeText={setPassword}
      />
      <Button title="Sign Up" onPress={handleSignUp} />
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
  },
  title: {
    fontSize: 24,
    marginBottom: 16,
  },
  input: {
    height: 40,
    width: '80%',
    borderColor: 'gray',
    borderWidth: 1,
    marginBottom: 16,
    paddingLeft: 8,
  },
});

export default SignUpScreen;

View CV

import React, { useState, useEffect } from 'react';
import { View, Text, StyleSheet } from 'react-native';
import AsyncStorage from '@react-native-async-storage/async-storage';

const ViewCVScreen = () => {
  const [cvDetails, setCVDetails] = useState(null);

  useEffect(() => {
    const getCVDetails = async () => {
      try {
        // Retrieve CV details from local storage
        const storedCVDetails = await AsyncStorage.getItem('cvDetails');

        if (storedCVDetails) {
          setCVDetails(JSON.parse(storedCVDetails));
        }
      } catch (error) {
        console.error('Error retrieving CV details:', error);
      }
    };

    getCVDetails();
  }, []);

 return (
    <View style={styles.container}>
      <Text style={styles.title}>CV Preview</Text>
      {cvDetails ? (
        <View style={styles.cvContainer}>
          <Text style={styles.sectionTitle}>Personal Information</Text>
          <Text>{`Name: ${cvDetails.firstName} ${cvDetails.lastName}`}</Text>
          <Text>{`Phone Number: ${cvDetails.phoneNumber}`}</Text>

          <Text style={styles.sectionTitle}>Education</Text>
          <Text>{`Degree: ${cvDetails.education}`}</Text>

          <Text style={styles.sectionTitle}>Experience</Text>
          <Text>{`Job Title: ${cvDetails.experience}`}</Text>
        </View>
      ) : (
        <Text>No CV details available</Text>
      )}
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    padding: 16,
    backgroundColor: '#ecf0f1',
  },
  title: {
    fontSize: 24,
    marginBottom: 16,
    fontWeight: 'bold',
    color: '#3498db',
  },
  cvContainer: {
    backgroundColor: '#fff',
    padding: 16,
    borderRadius: 8,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.3,
    shadowRadius: 4,
    elevation: 5,
  },
  sectionTitle: {
    fontSize: 18,
    fontWeight: 'bold',
    marginVertical: 8,
  },
});

export default ViewCVScreen;

